stages:
  - test
  - codestyle
  - messdetector
  - stats
  - stage
  - deploy

# PHP Docblock Checker
test:docblock:
  stage: codestyle
  before_script:
    - sh ./dev/build_dev_env.sh
    - sh ./dev/build_dev_env_docblock.sh
  script:
  - ./binaries/php-docblock-checker/phpdoccheck -d ./lib --no-interaction
  only:
    - branches
  except:
    - master

# PHP Mess Detector (PHPMD)
test:phpmd_cleancode:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text cleancode
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Mess Detector (PHPMD)
test:phpmd_codesize:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text codesize
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Mess Detector (PHPMD)
test:phpmd_controversial:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text controversial
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Mess Detector (PHPMD)
test:phpmd_design:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text design
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Mess Detector (PHPMD)
test:phpmd_naming:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text naming
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Mess Detector (PHPMD)
test:phpmd_unusedcode:
  stage: messdetector
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget http://static.phpmd.org/php/latest/phpmd.phar -O ./binaries/phpmd.phar
    - chmod +x ./binaries/phpmd.phar
  script:
  - ./binaries/phpmd.phar ./lib text unusedcode
  only:
    - branches
  except:
    - master
  allow_failure: true

# PHP Copy/Paste Detector (PHPCPD)
test:phpcpd:
  stage: codestyle
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget https://phar.phpunit.de/phpcpd.phar -O ./binaries/phpcpd.phar
    - chmod +x ./binaries/phpcpd.phar
  script:
  - ./binaries/phpcpd.phar ./lib
  only:
    - branches
  except:
    - master
  allow_failure: true

test:unit_7.0.18:
  stage: test
  before_script:
    - sh ./dev/build_dev_env.sh
    - sh ./dev/build_dev_env_phpunit.sh
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  script:
  - php ./binaries/phpunit.phar -c phpunit.xml

# This tool check syntax of PHP files faster than serial check with fancier output.
test:lint:
  stage: codestyle
  before_script:
    - sh ./dev/build_dev_env.sh
  script:
  - ./bundle/vendor/bin/parallel-lint --exclude library --exclude vendor --exclude binaries --exclude bundle/vendor --blame -e php .
  only:
    - branches
  except:
    - master
    - develop

# PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standard
test:phpcs:
  stage: codestyle
  before_script:
    - sh ./dev/build_dev_env.sh
  script:
    - bash ./dev/phpcs_cbf.sh
  only:
    - develop

# A tool for quickly measuring the size of a PHP project.
test:phploc:
  stage: stats
  before_script:
    - sh ./dev/build_dev_env.sh
    - wget https://phar.phpunit.de/phploc.phar -O ./binaries/phploc.phar
    - chmod +x ./binaries/phploc.phar
  script:
    - ./binaries/phploc.phar lib
  only:
    - develop

# Run our tests
test:dependancies:
  stage: stats
  before_script:
    - sh ./dev/build_dev_env.sh
  script:
  - php ./dev/dependCheck.php
  only:
  - develop

deploy_review:
  stage: stage
  script:
    - echo "Deploy a review app"
    - wget -O /tmp/deploy https://nxfifteen.me.uk/gitlab/nx-fitness/nxfitness-core/raw/$CI_COMMIT_REF_NAME/dev/deploy_review
    - bash /tmp/deploy "$REVIEW_PATH" $CI_COMMIT_REF_NAME $CI_ENVIRONMENT_SLUG
    - rm -f /tmp/deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://docs.core.itsabeta.nx/$CI_COMMIT_REF_NAME
  only:
    - develop

deploy_staging:
  stage: stage
  script:
    - echo "Deploy to staging server"
    - wget -O /tmp/deploy https://nxfifteen.me.uk/gitlab/nx-fitness/nxfitness-core/raw/$CI_COMMIT_REF_NAME/dev/deploy_staging
    - bash /tmp/deploy "$STAGING_PATH/$CI_ENVIRONMENT_SLUG" $CI_COMMIT_REF_NAME $CI_ENVIRONMENT_SLUG
    - rm -f /tmp/deploy
  environment:
    name: staging
    url: http://core.itsabeta.nx/$CI_ENVIRONMENT_SLUG/ux/
  only:
    - develop

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - scp ./dev/deploy_prod nxad@nxfifteen.me.uk:/home/nxad/homes/gitrepos/deploy_prod
    - ssh nxad@nxfifteen.me.uk chmod 755 /home/nxad/homes/gitrepos/deploy_prod
    - ssh nxad@nxfifteen.me.uk /home/nxad/homes/gitrepos/deploy_prod
  environment:
    name: production
    url: https://nxfifteen.me.uk/api/fitbit/
  only:
  - master
